% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transfer.R
\name{intercept_baton}
\alias{intercept_baton}
\title{Intercept a baton}
\usage{
intercept_baton(baton, loc = NULL, reset_only = FALSE, env = .GlobalEnv)
}
\arguments{
\item{baton}{R object of S3 class, created by \code{\link{create_baton}}}

\item{loc}{Location of YAML file that was saved from a \emph{baton}.}

\item{reset_only}{boolean value which will attempt only to reset the \code{pass_complete} status without loading the \emph{baton}.}

\item{env}{R environment to locate and delete duplicate batons during an interception; defaults to \code{.GlobalEnv}.}
}
\value{
S3 class object.
}
\description{
Functionally similar to \code{\link{grab_baton}} but able to obtain \emph{baton} before the pass operation is complete.
}
\details{
Normally, \code{\link{grab_baton}} is the preferred method to load a \emph{baton}. However, there are circumstances where a pass
needs to be \emph{intercepted} mid-pass so that a process can reset and continue. It is recommended to use \code{intercept_baton} in
limited situations. To avoid loading a baton twice, \code{intercept_baton} will attempt to delete any \emph{baton} in the global environment
that shares the same ID; this is a measure to ensure a baton is only being acted on linearly. A warning is also provided to remind users that
misuse of this function could lead to unexpected results in the YAML file if a pass that was expected to be completed was intercepted and acted
upon differently.
}
\examples{
\dontrun{
# Make a baton
baton_raw <- create_baton(bundled = TRUE,
                          bundle_params = list(dir = '/path/to/relay/raw_bundle',
                          tree = c('raw', 'processed', 'metadata', 'output')))

# Pass an empty baton for illustrative purposes
baton_raw <- relay::pass_baton(baton_raw)

# Grab the baton (if later in the script)
baton_raw <- relay::intercept_baton(baton_raw)

# Grab the baton (if in an entirely separate script/project)
baton_raw <- relay::intercept_baton(loc = '/path/to/original/baton')
}
}

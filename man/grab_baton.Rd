% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transfer.R
\name{grab_baton}
\alias{grab_baton}
\title{Grab a baton}
\usage{
grab_baton(baton, loc = NULL)
}
\arguments{
\item{baton}{R object of S3 class, created by \code{\link{create_baton}}}

\item{loc}{Location of YAML file that was saved from a \emph{baton}.}
}
\value{
S3 class object.
}
\description{
Attempt to start a new pass by grabbing a \emph{baton} object.
}
\details{
By default, \code{grab_baton} will use the parameter for a \emph{baton} that exists in the environment.
If a location of a YAML file is provided via \code{loc}, then an attempt is made to load a \emph{baton} from disk.
The \emph{baton} will only load if it had been successfully passed; if so, the \emph{baton} metadata will be updated in
preparation for a new pass to be performed later in the workflow. The original YAML file is overwritten to update two
metedata parameters: \code{pass_complete} and \code{relay_finish}.
}
\examples{
\dontrun{
# Make a baton
baton_raw <- create_baton(bundled = TRUE,
                          bundle_params = list(dir = '/path/to/relay/raw_bundle',
                          tree = c('raw', 'processed', 'metadata', 'output')))

# Pass an empty baton for illustrative purposes
baton_raw <- relay::pass_baton(baton_raw)

# Grab the baton (if later in the script)
baton_raw <- relay::grab_baton(baton_raw)

# Grab the baton (if in an entirely separate script/project)
baton_raw <- relay::grab_baton(loc = '/path/to/original/baton')
}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{compress_bundle}
\alias{compress_bundle}
\title{Compress entire bundle to tar}
\usage{
compress_bundle(
  bundle_dir,
  dir_to,
  file_extension = ".tar",
  tar,
  extra_flags,
  ...
)
}
\arguments{
\item{bundle_dir}{location of directory to compress; \emph{baton} can be provided to automate the process.}

\item{dir_to}{location to write the tar file; if \emph{baton} provided this will default to the parent directory.}

\item{file_extension}{character value; default set to \code{'.tar'}.}

\item{tar}{parameter passed to \code{\link[utils]{tar}}; may require assigning to \code{'tar'} manually if \code{Sys.getenv('tar')} has no value set.}

\item{extra_flags}{parameter passed to \code{\link[utils]{tar}}; defaults to \code{'-C'} for the \code{bundle_dir}.}

\item{...}{additional parameters passed to \code{\link[utils]{tar}}}
}
\description{
Helper function wrapped around \code{\link[utils]{tar}} for easy compression of \emph{bundles}.
}
\details{
In the context of \{relay\}, \code{compress_bundle()} simplifies the process of compressing the bundle (see \code{\link{create_bundle}}) into a single object
so it can be stored more efficiently or transferred across networks. When the \emph{baton} object is provided, it will by default use the baton's unique-id within the bundle
and place the tar file within the parent directory. This behavior can be overridden by manually providing the file path to \code{bundle_dir} parameter and the
write location parameter \code{dir_to}. It is recommended to match the \code{file_extension} to the type of compression; for example, if \code{compression = 'gzip'}, the extension
should be \code{'.tar.gz'}.
}
\examples{
\dontrun{
# Create a bundled baton
my_baton <- create_baton(bundled = TRUE,
                         bundle_params = list(dir = file.path('path', 'to', 'save', 'yaml'),
                                              tree = c('subdir1', 'subdir2', 'subdir3')))

# Compress based upon baton
compress_bundle(my_baton, tar = 'tar', file_extension = '.tar.gz', compression = 'gzip')

# Compress based upon bundle directory
compress_bundle('path/to/location/to/tar', tar = 'tar', file_extension = '.tar.gz', compression = 'gzip')

# Uncompress: use normal method:
untar("path/to/nameoftarfile.tar.gz", exdir ="/unzip/location", tar = 'TAR')
}
}
